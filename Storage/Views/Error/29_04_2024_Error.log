[ 29/04/2024-12:13:03 ] [ _.Views._ ] EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.i18n.t("Http.Titles." + it.title : "Error"))
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:30:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
[ 29/04/2024-12:13:03 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.i18n.t("Http.Titles." + it.title : "Error"))
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:30:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
[ 29/04/2024-12:15:59 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '&&'
=====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin", children: "Admin/Administration.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {&& it.req.user && it.req.user > Current.permission
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user > Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
__eta.res+='            '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='            '
}
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-12:15:59 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '&&'
=====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin", children: "Admin/Administration.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {&& it.req.user && it.req.user > Current.permission
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user > Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
__eta.res+='            '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='            '
}
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-12:15:59 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '&&'
=====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin", children: "Admin/Administration.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {&& it.req.user && it.req.user > Current.permission
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user > Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
__eta.res+='            '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='            '
}
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-12:15:59 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '&&'
=====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin", children: "Admin/Administration.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {&& it.req.user && it.req.user > Current.permission
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user > Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
__eta.res+='            '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='            '
}
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-12:16:30 ] [ _.Views._ ] EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.i18n.t("Http.Titles." + it.title : "Error"))
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:33:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
[ 29/04/2024-12:16:30 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.i18n.t("Http.Titles." + it.title : "Error"))
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:33:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
[ 29/04/2024-12:17:27 ] [ _.Views._ ] EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title) : "Error")
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:33:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
[ 29/04/2024-12:17:27 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

missing ) after argument list
=============================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+='<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+=' - '
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title) : "Error")
__eta.res+='</title>\n  <link href="/assets/css/main.css" rel="stylesheet">\n  <link href="/assets/css/tailwind.css" rel="stylesheet">\n</head>\n\n<body>\n  <div class="error-container bg-white dark:bg-black text-gray-800 dark:text-white flex justify-center items-center h-screen">\n    <div class="text-center">\n      <div class="error-code text-6xl font-bold mb-8">'
__eta.res+=__eta.e(it.status || it.res.statusCode || it.req.statusCode || "500")
__eta.res+='</div>\n      <div class="error-message text-2xl mb-8">'
__eta.res+=__eta.e(it.title ? it.i18n.t("Http.Titles." + it.title + "Desk" : "500"))
__eta.res+='</div>\n      '
if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.message)
__eta.res+='</div>\n      <div class="error-message text-lg text-red-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.Error.stack)
__eta.res+='</div>\n      '
} else {
__eta.res+='      <div class="error-message text-lg text-blue-500 dark:text-blue-700mb-8">'
__eta.res+=__eta.e(it.i18n.t("Http.ErrorGenericMessage" , { title:it.Global.title.get }))
__eta.res+='</div>\n      '
}
__eta.res+='    </div>\n  </div>\n</body>\n\n</html>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:33:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
[ 29/04/2024-12:33:04 ] [ _.Views._ ] EtaFileResolution Error: Template '../Components/Sidebar.eta' is not in the views directory
    at Eta.resolvePath (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:83:11)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:74:31)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:14:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
[ 29/04/2024-12:33:04 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Template '../Components/Sidebar.eta' is not in the views directory
    at Eta.resolvePath (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:83:11)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:74:31)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:14:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-12:33:04 ] [ _.Views._ ] EtaFileResolution Error: Template '../Components/Sidebar.eta' is not in the views directory
    at Eta.resolvePath (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:83:11)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:74:31)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:14:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
[ 29/04/2024-12:33:04 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Template '../Components/Sidebar.eta' is not in the views directory
    at Eta.resolvePath (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:83:11)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:74:31)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:14:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-12:33:44 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\General.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:30:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:26)
[ 29/04/2024-12:33:44 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\General.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:30:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:30)
[ 29/04/2024-12:39:46 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Missing initializer in const declaration
========================================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+=include("./sidebar.css.eta")
__eta.res+='<style>\n</style>\n<nav id="sidebar" class="sidebar bg-gray-400 dark:bg-slate-800 close">\n  <header>\n    <div class="image-text">\n      <span class="image">\n        <img src="'
__eta.res+=__eta.e(it.Global.logo.get)
__eta.res+='" alt="">\n      </span>\n      <div class="text logo-text">\n        <span class="name text-gray-800 dark:text-slate-300">'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+='</span>\n      </div>\n    </div>\n    <i onclick="toggleSidebar()" class=\'bx bx-chevron-right text-white bg-blue-400 dark:bg-blue-800 toggle\'></i>\n  </header>\n  <div class="menu-bar text-gray-800 dark:text-slate-300">\n    <div class="menu">\n      <ul class="menu-links">\n        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <a href="/">\n            <i class=\'bx bx-arrow-back icon\'></i>\n            <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Return"))
__eta.res+='</span>\n          </a>\n        </li>\n        '
for(const key og it.sidebar ) {
          let pather = it.route.path;
          const Option = it.sidebar[key];
          const color = pather === Option.path && " text-blue-700 dark:text-blue-400";
          if(it.req.user.permission < Option.permission) continue;
__eta.res+='        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600  rounded-lg duration-300">\n          <a href="'
__eta.res+=__eta.e(Option.path)
__eta.res+='">\n            <i class=\''
__eta.res+=__eta.e(Option.icon)
__eta.res+=' '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300 icon\'></i>\n            <span class="text '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300">'
__eta.res+=__eta.e(it.i18n.t("Http." + Option.name))
__eta.res+='</span>\n          </a>\n        </li>\n        '
}
__eta.res+='      </ul>\n    </div>\n    <div>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a @click="darkMode = !darkMode; localStorage.setItem(\'DarkMode\', darkMode.toString())" class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <i class=\'bx icon font-bold\' :class="darkMode ? \'bx-moon text-blue-800\' : \'bx-sun text-yellow-700\'"></i>\n          <span class="">'
__eta.res+=__eta.e(it.i18n.t("Http.Theme"))
__eta.res+='</span>\n        </a>\n      </li>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a href="/auth/logout">\n          <i class=\'bx bx-log-out icon\'></i>\n          <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Logout"))
__eta.res+='</span>\n        </a>\n      </li>\n    </div>\n  </div>\n</nav>\n<script>\n  function toggleSidebar() {\n    const sidebar = document.getElementById(\'sidebar\');\n    sidebar.classList.toggle("close");\n  }\n  const THEME_SWITCH = document.querySelector(\'#switch-toggle\');\n\n  let DashboardTheme = null;\n\n  function ThemeSetter() {\n    let a = document.documentElement.classList;\n    let t = THEME_SWITCH.classList;\n    DashboardTheme = !DashboardTheme;\n    if (!DashboardTheme) {\n      t.remove("bx-sun", "sun");\n      t.add("bx-moon", "moon");\n      a.add(\'dark\');\n    } else {\n      a.remove(\'dark\');\n      t.remove("bx-moon", "moon");\n      t.add("bx-sun", "sun");\n    }\n    localStorage.setItem(\'CurrentTheme\', DashboardTheme ? true : false);\n    setTimeout(() => {\n      THEME_SWITCH.innerHTML = DashboardTheme ? DARK_ICON : LIGHT_ICON\n      localStorage[DashboardTheme ? "setItem" : "removeItem"](\'CurrentTheme\', DashboardTheme ? true : false)\n    }, 250);\n  }\n\n  document.addEventListener(\'DOMContentLoaded\', function() {\n    if (DashboardTheme === null) DashboardTheme = localStorage.getItem(\'CurrentTheme\') ? true : false;\n    ThemeSetter();\n  });\n</script>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
[ 29/04/2024-12:39:46 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Missing initializer in const declaration
========================================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+=include("./sidebar.css.eta")
__eta.res+='<style>\n</style>\n<nav id="sidebar" class="sidebar bg-gray-400 dark:bg-slate-800 close">\n  <header>\n    <div class="image-text">\n      <span class="image">\n        <img src="'
__eta.res+=__eta.e(it.Global.logo.get)
__eta.res+='" alt="">\n      </span>\n      <div class="text logo-text">\n        <span class="name text-gray-800 dark:text-slate-300">'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+='</span>\n      </div>\n    </div>\n    <i onclick="toggleSidebar()" class=\'bx bx-chevron-right text-white bg-blue-400 dark:bg-blue-800 toggle\'></i>\n  </header>\n  <div class="menu-bar text-gray-800 dark:text-slate-300">\n    <div class="menu">\n      <ul class="menu-links">\n        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <a href="/">\n            <i class=\'bx bx-arrow-back icon\'></i>\n            <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Return"))
__eta.res+='</span>\n          </a>\n        </li>\n        '
for(const key og it.sidebar ) {
          let pather = it.route.path;
          const Option = it.sidebar[key];
          const color = pather === Option.path && " text-blue-700 dark:text-blue-400";
          if(it.req.user.permission < Option.permission) continue;
__eta.res+='        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600  rounded-lg duration-300">\n          <a href="'
__eta.res+=__eta.e(Option.path)
__eta.res+='">\n            <i class=\''
__eta.res+=__eta.e(Option.icon)
__eta.res+=' '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300 icon\'></i>\n            <span class="text '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300">'
__eta.res+=__eta.e(it.i18n.t("Http." + Option.name))
__eta.res+='</span>\n          </a>\n        </li>\n        '
}
__eta.res+='      </ul>\n    </div>\n    <div>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a @click="darkMode = !darkMode; localStorage.setItem(\'DarkMode\', darkMode.toString())" class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <i class=\'bx icon font-bold\' :class="darkMode ? \'bx-moon text-blue-800\' : \'bx-sun text-yellow-700\'"></i>\n          <span class="">'
__eta.res+=__eta.e(it.i18n.t("Http.Theme"))
__eta.res+='</span>\n        </a>\n      </li>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a href="/auth/logout">\n          <i class=\'bx bx-log-out icon\'></i>\n          <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Logout"))
__eta.res+='</span>\n        </a>\n      </li>\n    </div>\n  </div>\n</nav>\n<script>\n  function toggleSidebar() {\n    const sidebar = document.getElementById(\'sidebar\');\n    sidebar.classList.toggle("close");\n  }\n  const THEME_SWITCH = document.querySelector(\'#switch-toggle\');\n\n  let DashboardTheme = null;\n\n  function ThemeSetter() {\n    let a = document.documentElement.classList;\n    let t = THEME_SWITCH.classList;\n    DashboardTheme = !DashboardTheme;\n    if (!DashboardTheme) {\n      t.remove("bx-sun", "sun");\n      t.add("bx-moon", "moon");\n      a.add(\'dark\');\n    } else {\n      a.remove(\'dark\');\n      t.remove("bx-moon", "moon");\n      t.add("bx-sun", "sun");\n    }\n    localStorage.setItem(\'CurrentTheme\', DashboardTheme ? true : false);\n    setTimeout(() => {\n      THEME_SWITCH.innerHTML = DashboardTheme ? DARK_ICON : LIGHT_ICON\n      localStorage[DashboardTheme ? "setItem" : "removeItem"](\'CurrentTheme\', DashboardTheme ? true : false)\n    }, 250);\n  }\n\n  document.addEventListener(\'DOMContentLoaded\', function() {\n    if (DashboardTheme === null) DashboardTheme = localStorage.getItem(\'CurrentTheme\') ? true : false;\n    ThemeSetter();\n  });\n</script>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
[ 29/04/2024-12:52:34 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Missing initializer in const declaration
========================================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+=include("./sidebar.css.eta")
__eta.res+='<style>\n</style>\n<nav id="sidebar" class="sidebar bg-gray-400 dark:bg-slate-800 close">\n  <header>\n    <div class="image-text">\n      <span class="image">\n        <img src="'
__eta.res+=__eta.e(it.Global.logo.get)
__eta.res+='" alt="">\n      </span>\n      <div class="text logo-text">\n        <span class="name text-gray-800 dark:text-slate-300">'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+='</span>\n      </div>\n    </div>\n    <i onclick="toggleSidebar()" class=\'bx bx-chevron-right text-white bg-blue-400 dark:bg-blue-800 toggle\'></i>\n  </header>\n  <div class="menu-bar text-gray-800 dark:text-slate-300">\n    <div class="menu">\n      <ul class="menu-links">\n        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <a href="/">\n            <i class=\'bx bx-arrow-back icon\'></i>\n            <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Return"))
__eta.res+='</span>\n          </a>\n        </li>\n        '
for(const key og it.sidebar ) {
          let pather = it.route.path;
          const Option = it.sidebar[key];
          const color = pather === Option.path && " text-blue-700 dark:text-blue-400";
          if(it.req.user.permission >= Option.permission) continue;
__eta.res+='        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600  rounded-lg duration-300">\n          <a href="'
__eta.res+=__eta.e(Option.path)
__eta.res+='">\n            <i class=\''
__eta.res+=__eta.e(Option.icon)
__eta.res+=' '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300 icon\'></i>\n            <span class="text '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300">'
__eta.res+=__eta.e(it.i18n.t("Http." + Option.name))
__eta.res+='</span>\n          </a>\n        </li>\n        '
}
__eta.res+='      </ul>\n    </div>\n    <div>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a @click="darkMode = !darkMode; localStorage.setItem(\'DarkMode\', darkMode.toString())" class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <i class=\'bx icon font-bold\' :class="darkMode ? \'bx-moon text-blue-800\' : \'bx-sun text-yellow-700\'"></i>\n          <span class="">'
__eta.res+=__eta.e(it.i18n.t("Http.Theme"))
__eta.res+='</span>\n        </a>\n      </li>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a href="/auth/logout">\n          <i class=\'bx bx-log-out icon\'></i>\n          <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Logout"))
__eta.res+='</span>\n        </a>\n      </li>\n    </div>\n  </div>\n</nav>\n<script>\n  function toggleSidebar() {\n    const sidebar = document.getElementById(\'sidebar\');\n    sidebar.classList.toggle("close");\n  }\n  const THEME_SWITCH = document.querySelector(\'#switch-toggle\');\n\n  let DashboardTheme = null;\n\n  function ThemeSetter() {\n    let a = document.documentElement.classList;\n    let t = THEME_SWITCH.classList;\n    DashboardTheme = !DashboardTheme;\n    if (!DashboardTheme) {\n      t.remove("bx-sun", "sun");\n      t.add("bx-moon", "moon");\n      a.add(\'dark\');\n    } else {\n      a.remove(\'dark\');\n      t.remove("bx-moon", "moon");\n      t.add("bx-sun", "sun");\n    }\n    localStorage.setItem(\'CurrentTheme\', DashboardTheme ? true : false);\n    setTimeout(() => {\n      THEME_SWITCH.innerHTML = DashboardTheme ? DARK_ICON : LIGHT_ICON\n      localStorage[DashboardTheme ? "setItem" : "removeItem"](\'CurrentTheme\', DashboardTheme ? true : false)\n    }, 250);\n  }\n\n  document.addEventListener(\'DOMContentLoaded\', function() {\n    if (DashboardTheme === null) DashboardTheme = localStorage.getItem(\'CurrentTheme\') ? true : false;\n    ThemeSetter();\n  });\n</script>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
[ 29/04/2024-12:52:34 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Missing initializer in const declaration
========================================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

__eta.res+=include("./sidebar.css.eta")
__eta.res+='<style>\n</style>\n<nav id="sidebar" class="sidebar bg-gray-400 dark:bg-slate-800 close">\n  <header>\n    <div class="image-text">\n      <span class="image">\n        <img src="'
__eta.res+=__eta.e(it.Global.logo.get)
__eta.res+='" alt="">\n      </span>\n      <div class="text logo-text">\n        <span class="name text-gray-800 dark:text-slate-300">'
__eta.res+=__eta.e(it.Global.title.get)
__eta.res+='</span>\n      </div>\n    </div>\n    <i onclick="toggleSidebar()" class=\'bx bx-chevron-right text-white bg-blue-400 dark:bg-blue-800 toggle\'></i>\n  </header>\n  <div class="menu-bar text-gray-800 dark:text-slate-300">\n    <div class="menu">\n      <ul class="menu-links">\n        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <a href="/">\n            <i class=\'bx bx-arrow-back icon\'></i>\n            <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Return"))
__eta.res+='</span>\n          </a>\n        </li>\n        '
for(const key og it.sidebar ) {
          let pather = it.route.path;
          const Option = it.sidebar[key];
          const color = pather === Option.path && " text-blue-700 dark:text-blue-400";
          if(it.req.user.permission >= Option.permission) continue;
__eta.res+='        <li class="nav-link hover:bg-gray-300 dark:hover:bg-gray-600  rounded-lg duration-300">\n          <a href="'
__eta.res+=__eta.e(Option.path)
__eta.res+='">\n            <i class=\''
__eta.res+=__eta.e(Option.icon)
__eta.res+=' '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300 icon\'></i>\n            <span class="text '
__eta.res+=__eta.e(color ? color :"dark:hover:text-white")
__eta.res+=' duration-300">'
__eta.res+=__eta.e(it.i18n.t("Http." + Option.name))
__eta.res+='</span>\n          </a>\n        </li>\n        '
}
__eta.res+='      </ul>\n    </div>\n    <div>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a @click="darkMode = !darkMode; localStorage.setItem(\'DarkMode\', darkMode.toString())" class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n          <i class=\'bx icon font-bold\' :class="darkMode ? \'bx-moon text-blue-800\' : \'bx-sun text-yellow-700\'"></i>\n          <span class="">'
__eta.res+=__eta.e(it.i18n.t("Http.Theme"))
__eta.res+='</span>\n        </a>\n      </li>\n      <li class="hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg duration-300">\n        <a href="/auth/logout">\n          <i class=\'bx bx-log-out icon\'></i>\n          <span class="text">'
__eta.res+=__eta.e(it.i18n.t("Http.Logout"))
__eta.res+='</span>\n        </a>\n      </li>\n    </div>\n  </div>\n</nav>\n<script>\n  function toggleSidebar() {\n    const sidebar = document.getElementById(\'sidebar\');\n    sidebar.classList.toggle("close");\n  }\n  const THEME_SWITCH = document.querySelector(\'#switch-toggle\');\n\n  let DashboardTheme = null;\n\n  function ThemeSetter() {\n    let a = document.documentElement.classList;\n    let t = THEME_SWITCH.classList;\n    DashboardTheme = !DashboardTheme;\n    if (!DashboardTheme) {\n      t.remove("bx-sun", "sun");\n      t.add("bx-moon", "moon");\n      a.add(\'dark\');\n    } else {\n      a.remove(\'dark\');\n      t.remove("bx-moon", "moon");\n      t.add("bx-sun", "sun");\n    }\n    localStorage.setItem(\'CurrentTheme\', DashboardTheme ? true : false);\n    setTimeout(() => {\n      THEME_SWITCH.innerHTML = DashboardTheme ? DARK_ICON : LIGHT_ICON\n      localStorage[DashboardTheme ? "setItem" : "removeItem"](\'CurrentTheme\', DashboardTheme ? true : false)\n    }, 250);\n  }\n\n  document.addEventListener(\'DOMContentLoaded\', function() {\n    if (DashboardTheme === null) DashboardTheme = localStorage.getItem(\'CurrentTheme\') ? true : false;\n    ThemeSetter();\n  });\n</script>'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
[ 29/04/2024-12:52:54 ] [ _.Views._ ] TypeError: Cannot read properties of undefined (reading 'path')
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:43)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
[ 29/04/2024-12:52:54 ] [ _.Views._ ] Fatal:TypeError: Cannot read properties of undefined (reading 'path')
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:43)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
[ 29/04/2024-12:54:12 ] [ _.Views._ ] TypeError: Cannot read properties of undefined (reading 'path')
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:43)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
[ 29/04/2024-12:54:12 ] [ _.Views._ ] Fatal:TypeError: Cannot read properties of undefined (reading 'path')
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:43)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
[ 29/04/2024-12:59:49 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token 'const'
========================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

const Routes = [
    { path: "/admin", children: "General.eta", icon: "bx bx-home-alt", permission: 2, name: "AdministrationMain" },
    { path: "/admin/activities", children: "Activities.eta", icon: "bx bx-home-alt", permission: 6, name: "AdministrationActivities" },
];

// Include sidebar component with routes
await includeAsync("../Components/Sidebar.eta", { ...it, sidebar: Routes });
__eta.res+='\n<section class="home">\n    '
__eta.res+=const Current = it.Router(it.req._parsedUrl, Routes);

    if (Current && Current.children) {
        // Check if the route requires permission
        if (Current.permission) {
            // Check user permission to access the route
            if (it.req.user && it.req.user.permission >= Current.permission) {
                // User has sufficient permission to access the route
                await includeAsync(Current.children, { ...it, route: Current });
            } else {
                // User does not have sufficient permission
                if (!it.req.user) {
                    // Redirect to login if user is not authenticated
                    return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
                } else {
                    // Display permission error
                    await includeAsync("./Error.eta", { ...it, title: "NotPerms", status: 403 });
                }
            }
        } else {
            // Route does not require permission
            await includeAsync(Current.children, { ...it, route: Current });
        }
    } else {
        // No matching route found
        await includeAsync("./Error.eta", { ...it, title: "NotFound", status: 404 });
    }
__eta.res+='</section>\n'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:120:41)
[ 29/04/2024-12:59:49 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token 'const'
========================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

const Routes = [
    { path: "/admin", children: "General.eta", icon: "bx bx-home-alt", permission: 2, name: "AdministrationMain" },
    { path: "/admin/activities", children: "Activities.eta", icon: "bx bx-home-alt", permission: 6, name: "AdministrationActivities" },
];

// Include sidebar component with routes
await includeAsync("../Components/Sidebar.eta", { ...it, sidebar: Routes });
__eta.res+='\n<section class="home">\n    '
__eta.res+=const Current = it.Router(it.req._parsedUrl, Routes);

    if (Current && Current.children) {
        // Check if the route requires permission
        if (Current.permission) {
            // Check user permission to access the route
            if (it.req.user && it.req.user.permission >= Current.permission) {
                // User has sufficient permission to access the route
                await includeAsync(Current.children, { ...it, route: Current });
            } else {
                // User does not have sufficient permission
                if (!it.req.user) {
                    // Redirect to login if user is not authenticated
                    return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
                } else {
                    // Display permission error
                    await includeAsync("./Error.eta", { ...it, title: "NotPerms", status: 403 });
                }
            }
        } else {
            // Route does not require permission
            await includeAsync(Current.children, { ...it, route: Current });
        }
    } else {
        // No matching route found
        await includeAsync("./Error.eta", { ...it, title: "NotFound", status: 404 });
    }
__eta.res+='</section>\n'

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:127:45)
[ 29/04/2024-13:04:48 ] [ _.Views._ ] SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
[ 29/04/2024-13:04:48 ] [ _.Views._ ] Fatal:SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-13:04:49 ] [ _.Views._ ] SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
[ 29/04/2024-13:04:49 ] [ _.Views._ ] Fatal:SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-13:04:50 ] [ _.Views._ ] SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
[ 29/04/2024-13:04:50 ] [ _.Views._ ] Fatal:SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-13:04:50 ] [ _.Views._ ] SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
[ 29/04/2024-13:04:50 ] [ _.Views._ ] Fatal:SyntaxError: Invalid regular expression: /^/admin/**\/?$/: Nothing to repeat
    at new RegExp (<anonymous>)
    at Object.call [as Router] (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:36:34)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:23:20)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-14:36:08 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-14:36:08 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:30)
[ 29/04/2024-14:39:32 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-14:39:32 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:30)
[ 29/04/2024-15:31:18 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:31:18 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:30)
[ 29/04/2024-15:42:32 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:42:32 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:30)
[ 29/04/2024-15:42:54 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:43:01 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:43:38 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:43:51 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:44:33 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:45:06 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:46:20 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:46:39 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:47:01 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:47:15 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:47:37 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:49:49 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:49:52 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:49:55 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:50:42 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:50:45 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:55:14 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:55:43 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:56:20 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:56:46 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:03 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:05 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:05 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:47 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:48 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:57:48 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:58:12 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:58:37 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-15:58:53 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:00:01 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:00:06 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:00:46 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:01:11 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:01:15 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:01:24 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:01:29 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:02:06 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:03:56 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:05:27 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:07:20 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-16:22:40 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:22:40 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
[ 29/04/2024-16:22:40 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:22:40 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:23:21 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:23:21 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:23:21 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:23:21 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:23:27 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:23:27 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:23:27 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:23:27 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:02 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:02 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:03 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:03 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it?.Error && it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:41 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:41 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:41 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:41 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:54 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:54 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:27:54 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:27:54 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:28:31 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:28:31 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:28:31 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:28:31 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    %>\n                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:29:03 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:29:03 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:29:03 ] [ _.Views._ ] EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:41)
    at C:\Users\Drylian\Documents\GitHub\CorePanel\app\Http\StructuralHttp.ts:116:14
    at Layer.handle [as handle_request] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\express\lib\router\route.js:149:13)
[ 29/04/2024-16:29:03 ] [ _.Views._ ] Fatal:EtaParser Error: Bad template syntax

Unexpected token '<'
====================

let include = (template, data) => this.render(template, data, options);
let includeAsync = (template, data) => this.renderAsync(template, data, options);

let __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction};

function layout(path, data) {
  __eta.layout = path;
  __eta.layoutData = data;
}

/**
 * Views Routes
 */
const Routes = [
    { path: "/admin/**", children: "Admin/Router.eta", permission: 2 },
    { path: "/auth/login", children: "Auth/Login.eta" },
    { path: "/auth/register", children: "Auth/Register.eta" },
];

const Current = it.Router(it.req._parsedUrl, Routes);

if (Current && Current.children) {
    if (Current.permission) {
        if (Current.permission && it.req.user && it.req.user.permission >= Current.permission) {
__eta.res+='            '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='            '
} else {
            if (!it.req.user) {
                return it.res.status(302).redirect("/auth/login?callback=" + it.req._parsedUrl.pathname);
            } else {
                <%if(it.Global.mode.get.startsWith("dev")) {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotPerms", status: 403 })
__eta.res+='                    '
} else {
__eta.res+='                    '
__eta.res+=await includeAsync("./Errors/Error.eta", { ...it, title: "NotFound", status: 404 })
__eta.res+='                    '
}
            }
        }
    } else {
__eta.res+='        '
__eta.res+=await includeAsync(Current.children, { ...it, route: Current })
__eta.res+='        '
}
} else {
__eta.res+='    '
__eta.res+=await includeAsync("./React.eta", { ...it })
__eta.res+='    '
}

if (__eta.layout) {
  __eta.res = await includeAsync (__eta.layout, {...it, body: __eta.res, ...__eta.layoutData});
}

return __eta.res;


    at Eta.compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:36:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:22:31)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:133:45)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ 29/04/2024-16:38:35 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Components\Navbar.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:14:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
[ 29/04/2024-16:45:03 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Admin\Activities.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:26:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:12)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:25:12)
    at Etalization.send (C:\Users\Drylian\Documents\GitHub\CorePanel\app\Classes\Etalization.ts:126:26)
[ 29/04/2024-17:01:55 ] [ _.Views._ ] EtaFileResolution Error: Could not find template: app\Resources\Views\Components\Sidebar.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
[ 29/04/2024-17:01:55 ] [ _.Views._ ] Fatal:EtaFileResolution Error: Could not find template: app\Resources\Views\Components\Sidebar.eta
    at Eta.readFile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\file-handling.ts:20:13)
    at Eta.call (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:20:35)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:77:30)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:18:18)
    at Eta.call [as renderAsync] (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
    at Eta.eval (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:29:18)
    at Eta.renderAsync (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\render.ts:82:26)
    at includeAsync (eval at compile (C:\Users\Drylian\Documents\GitHub\CorePanel\node_modules\eta\src\compile.ts:29:12), <anonymous>:5:45)
